{"version":3,"sources":["store.js","reducers/productReducers.js","constants/productConstants.js","reducers/cartReducers.js","constants/cartConstants.js","reducers/userReducers.js","constants/userConstants.js","reducers/orderReducer.js","constants/orderConstants.js","components/Footer.js","actions/userActions.js","components/SearchBox.js","components/Header.js","actions/cartActions.js","components/Message.js","Screens/CartScreen.js","components/Rating.js","components/Product.js","actions/productActions.js","components/Loader.js","components/Paginate.js","components/ProductCarousel.js","components/Meta.js","Screens/HomeScreen.js","components/FormContainer.js","Screens/LoginScreen.js","Screens/OrderListScreen.js","actions/orderActions.js","Screens/OrderScreen.js","components/CheckoutSteps.js","Screens/PaymentScreen.js","Screens/PlaceOrderScreen.js","Screens/ProductEditScreen.js","Screens/ProductListScreen.js","Screens/ProductScreen.js","Screens/ProfileScreen.js","Screens/RegisterScreen.js","Screens/ShippingScreen.js","Screens/UserEditScreen.js","Screens/UserListScreen.js","App.js","serviceWorker.js","index.js"],"names":["reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userDelete","userList","users","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderDeliver","ordersListMy","orders","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","Footer","Container","Row","Col","className","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","message","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","onChange","target","value","placeholder","Button","variant","Header","useSelector","useDispatch","Navbar","bg","expand","collapseOnSelect","to","Brand","Toggle","aria-controls","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","addToCart","qty","_id","image","price","countInStock","setItem","stringify","Message","children","Alert","defaultProps","CartScreen","match","location","productId","params","search","Number","split","useEffect","removeFromCartHandler","removeFromCart","md","length","ListGroup","key","Image","src","alt","fluid","rounded","as","Array","keys","Card","reduce","acc","toFixed","disabled","Rating","text","color","style","prototype","PropTypes","number","isRequired","string","Product","valueNumReviews","numReviews","toString","substring","Img","Body","Title","Text","rating","listProducts","pageNumber","listProductDetails","Loader","Spinner","animation","role","width","height","margin","display","Paginate","Pagination","active","ProductCarousel","listTopProducts","Carousel","pause","Caption","Meta","description","Helmet","content","HomeScreen","sm","lg","xl","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","post","login","Group","controlId","Label","OrderListScreen","Table","striped","bordered","hover","responsive","createdAt","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","OrderScreen","num","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","itemsPrice","Math","round","addPayPalScript","clientId","script","document","createElement","async","onload","body","appendChild","window","paypal","href","address","city","postalCode","country","index","shippingPrice","taxPrice","amount","onSuccess","paymentResult","put","payOrder","deliverOrder","CheckoutSteps","step1","step2","step3","step4","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","postalcode","createOrder","ProductEditScreen","setName","setPrice","setImage","brand","setBrand","category","setCategory","setCountInStock","setDescription","uploading","setUploading","loadingUpdate","errorUpdate","successUpdate","uploadFileHandler","file","files","formData","FormData","append","console","updateProduct","File","custom","ProductListScreen","loadingCreate","errorCreate","successCreate","createdProduct","loadingDelete","errorDelete","successDelete","deleteHandler","confirm","delete","deleteProduct","ProductScreen","setQty","setRating","comment","setComment","errorProductReview","successProductReview","alert","review","row","ProfileScreen","confirmPassword","setConfirmPassword","setMessage","loadingOrder","errorOrder","updateUserProfile","RegisterScreen","register","ShippingScreen","setAddress","setCity","setPostalcode","setCountry","required","UserEditScreen","userId","setIsAdmin","updateUsers","UserListScreen","deleteUsers","App","path","component","exact","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.36ed3177.chunk.js","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport {\n  productCreateReducer,\n  productDeleteReducer,\n  productDetailsReducer,\n  productListReducer,\n  productReviewCreateReducer,\n  productTopRatedReducer,\n  productUpdateReducer,\n} from \"./reducers/productReducers\";\nimport { cartReducer } from \"./reducers/cartReducers\";\nimport {\n  userDeleteReducer,\n  userDetailsReducer,\n  userListReducer,\n  userLoginReducer,\n  userRegisterReducer,\n  userUpdateProfileReducer,\n  userUpdateReducer,\n} from \"./reducers/userReducers\";\nimport {\n  orderCreateReducer,\n  orderDeliverReducer,\n  orderDetailsReducer,\n  orderListMyReducer,\n  orderListReducer,\n  orderPayReducer,\n} from \"./reducers/orderReducer\";\n\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productReviewCreate: productReviewCreateReducer,\n  productTopRated: productTopRatedReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userDelete: userDeleteReducer,\n  userList: userListReducer,\n  userUpdate: userUpdateReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderDeliver: orderDeliverReducer,\n  ordersListMy: orderListMyReducer,\n  orderList: orderListReducer,\n});\n\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\")\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\n  : [];\n\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\n  : null;\n\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\")\n  ? JSON.parse(localStorage.getItem(\"shippingAddress\"))\n  : {};\n\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage,\n  },\n  userLogin: { userInfo: userInfoFromStorage },\n};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import {\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_CREATE_RESET,\n  PRODUCT_CREATE_REVIEW_FAIL,\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_CREATE_REVIEW_RESET,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_TOP_FAIL,\n  PRODUCT_TOP_REQUEST,\n  PRODUCT_TOP_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_RESET,\n  PRODUCT_UPDATE_SUCCESS,\n} from \"../constants/productConstants\";\n\nexport const productListReducer = (state = { products: [] }, action) => {\n  switch (action.type) {\n    case PRODUCT_LIST_REQUEST:\n      return { loading: true, products: [] };\n    case PRODUCT_LIST_SUCCESS:\n      return {\n        loading: false,\n        products: action.payload.products,\n        pages: action.payload.pages,\n        page: action.payload.page,\n      };\n    case PRODUCT_LIST_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const productDetailsReducer = (\n  state = { product: { reviews: [] } },\n  action\n) => {\n  switch (action.type) {\n    case PRODUCT_DETAILS_REQUEST:\n      return { loading: true, ...state };\n    case PRODUCT_DETAILS_SUCCESS:\n      return { loading: false, product: action.payload };\n    case PRODUCT_DETAILS_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const productDeleteReducer = (state = { product: {} }, action) => {\n  switch (action.type) {\n    case PRODUCT_DELETE_REQUEST:\n      return { loading: true };\n    case PRODUCT_DELETE_SUCCESS:\n      return { loading: false, success: true };\n    case PRODUCT_DELETE_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const productCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_CREATE_REQUEST:\n      return { loading: true };\n    case PRODUCT_CREATE_SUCCESS:\n      return { loading: false, success: true, product: action.payload };\n    case PRODUCT_CREATE_FAIL:\n      return { loading: false, error: action.payload };\n    case PRODUCT_CREATE_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const productUpdateReducer = (state = { product: {} }, action) => {\n  switch (action.type) {\n    case PRODUCT_UPDATE_REQUEST:\n      return { loading: true };\n    case PRODUCT_UPDATE_SUCCESS:\n      return { loading: false, success: true, product: action.payload };\n    case PRODUCT_UPDATE_FAIL:\n      return { loading: false, error: action.payload };\n    case PRODUCT_UPDATE_RESET:\n      return { product: {} };\n    default:\n      return state;\n  }\n};\n\nexport const productReviewCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_CREATE_REVIEW_REQUEST:\n      return { loading: true };\n    case PRODUCT_CREATE_REVIEW_SUCCESS:\n      return { loading: false, success: true };\n    case PRODUCT_CREATE_REVIEW_FAIL:\n      return { loading: false, error: action.payload };\n    case PRODUCT_CREATE_REVIEW_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\n  switch (action.type) {\n    case PRODUCT_TOP_REQUEST:\n      return { loading: true, products: [] };\n    case PRODUCT_TOP_SUCCESS:\n      return { loading: false, products: action.payload };\n    case PRODUCT_TOP_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n","export const PRODUCT_LIST_REQUEST = \"PRODUCT_LIST_REQUEST\";\nexport const PRODUCT_LIST_SUCCESS = \"PRODUCT_LIST_SUCCESS\";\nexport const PRODUCT_LIST_FAIL = \"PRODUCT_LIST_FAIL\";\n\nexport const PRODUCT_DETAILS_REQUEST = \"PRODUCT_DETAILS_REQUEST\";\nexport const PRODUCT_DETAILS_SUCCESS = \"PRODUCT_DETAILS_SUCCESS\";\nexport const PRODUCT_DETAILS_FAIL = \"PRODUCT_DETAILS_FAIL\";\n\nexport const PRODUCT_DELETE_REQUEST = \"PRODUCT_DELETE_REQUEST\";\nexport const PRODUCT_DELETE_SUCCESS = \"PRODUCT_DELETE_SUCCESS\";\nexport const PRODUCT_DELETE_FAIL = \"PRODUCT_DELETE_FAIL\";\n\nexport const PRODUCT_CREATE_REQUEST = \"PRODUCT_CREATE_REQUEST\";\nexport const PRODUCT_CREATE_SUCCESS = \"PRODUCT_CREATE_SUCCESS\";\nexport const PRODUCT_CREATE_FAIL = \"PRODUCT_CREATE_FAIL\";\nexport const PRODUCT_CREATE_RESET = \"PRODUCT_CREATE_RESET\";\n\nexport const PRODUCT_UPDATE_REQUEST = \"PRODUCT_UPDATE_REQUEST\";\nexport const PRODUCT_UPDATE_SUCCESS = \"PRODUCT_UPDATE_SUCCESS\";\nexport const PRODUCT_UPDATE_FAIL = \"PRODUCT_UPDATE_FAIL\";\nexport const PRODUCT_UPDATE_RESET = \"PRODUCT_UPDATE_RESET\";\n\nexport const PRODUCT_CREATE_REVIEW_REQUEST = \"PRODUCT_CREATE_REVIEW_REQUEST\";\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = \"PRODUCT_CREATE_REVIEW_SUCCESS\";\nexport const PRODUCT_CREATE_REVIEW_FAIL = \"PRODUCT_CREATE_REVIEW_FAIL\";\nexport const PRODUCT_CREATE_REVIEW_RESET = \"PRODUCT_CREATE_REVIEW_RESET\";\n\nexport const PRODUCT_TOP_REQUEST = \"PRODUCT_TOP_REQUEST\";\nexport const PRODUCT_TOP_SUCCESS = \"PRODUCT_TOP_SUCCESS\";\nexport const PRODUCT_TOP_FAIL = \"PRODUCT_TOP_FAIL\";\n","import {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_SAVE_SHIPPING_ADDRESS,\n  CART_SAVE_PAYMENT_METHOD,\n} from \"../constants/cartConstants\";\n\nexport const cartReducer = (\n  state = { cartItems: [], shippingAddress: {} },\n  action\n) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload;\n\n      const existItem = state.cartItems.find((x) => x.product === item.product);\n\n      if (existItem) {\n        return {\n          ...state,\n          cartItems: state.cartItems.map((x) =>\n            x.product === existItem.product ? item : x\n          ),\n        };\n      } else {\n        return {\n          ...state,\n          cartItems: [...state.cartItems, item],\n        };\n      }\n    case CART_REMOVE_ITEM:\n      return {\n        ...state,\n        cartItems: state.cartItems.filter((x) => x.product !== action.payload),\n      };\n\n    case CART_SAVE_SHIPPING_ADDRESS:\n      return {\n        ...state,\n        shippingAddress: action.payload,\n      };\n    case CART_SAVE_PAYMENT_METHOD:\n      return {\n        ...state,\n        paymentMethod: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","export const CART_ADD_ITEM = \"CART_ADD_ITEM\";\nexport const CART_REMOVE_ITEM = \"CART_REMOVE_ITEM\";\nexport const CART_SAVE_SHIPPING_ADDRESS = \"CART_SAVE_SHIPPING_ADDRESS\";\nexport const CART_SAVE_PAYMENT_METHOD = \"CART_SAVE_PAYMENT_METHOD\";\n","import {\n  USER_DELETE_FAIL,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DETAILS_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_RESET,\n  USER_DETAILS_SUCCESS,\n  USER_LIST_FAIL,\n  USER_LIST_REQUEST,\n  USER_LIST_RESET,\n  USER_LIST_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGIN_LOGOUT,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_RESET,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_RESET,\n  USER_UPDATE_SUCCESS,\n} from \"../constants/userConstants\";\n\nexport const userLoginReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_LOGIN_REQUEST:\n      return { loading: true };\n    case USER_LOGIN_SUCCESS:\n      return {\n        loading: false,\n        userInfo: action.payload,\n      };\n    case USER_LOGIN_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n    case USER_LOGIN_LOGOUT:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const userRegisterReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_REGISTER_REQUEST:\n      return { loading: true };\n    case USER_REGISTER_SUCCESS:\n      return {\n        loading: false,\n        userInfo: action.payload,\n      };\n    case USER_REGISTER_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const userDetailsReducer = (state = { user: {} }, action) => {\n  switch (action.type) {\n    case USER_DETAILS_REQUEST:\n      return { ...state, loading: true };\n    case USER_DETAILS_SUCCESS:\n      return {\n        loading: false,\n        user: action.payload,\n      };\n    case USER_DETAILS_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n    case USER_DETAILS_RESET:\n      return { user: {} };\n    default:\n      return state;\n  }\n};\n\nexport const userUpdateProfileReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_UPDATE_PROFILE_REQUEST:\n      return { loading: true };\n    case USER_UPDATE_PROFILE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n        userInfo: action.payload,\n      };\n    case USER_UPDATE_PROFILE_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n    case USER_UPDATE_PROFILE_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const userListReducer = (state = { users: [] }, action) => {\n  switch (action.type) {\n    case USER_LIST_REQUEST:\n      return { loading: true };\n    case USER_LIST_SUCCESS:\n      return {\n        loading: false,\n        users: action.payload,\n      };\n    case USER_LIST_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n    case USER_LIST_RESET:\n      return { users: [] };\n    default:\n      return state;\n  }\n};\n\nexport const userDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_DELETE_REQUEST:\n      return { loading: true };\n    case USER_DELETE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n      };\n    case USER_DELETE_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\nexport const userUpdateReducer = (state = { users: {} }, action) => {\n  switch (action.type) {\n    case USER_UPDATE_REQUEST:\n      return { loading: true };\n    case USER_UPDATE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n      };\n    case USER_UPDATE_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n    case USER_UPDATE_RESET:\n      return { users: {} };\n    default:\n      return state;\n  }\n};\n","export const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\";\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\";\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\";\nexport const USER_LOGIN_LOGOUT = \"USER_LOGIN_LOGOUT\";\n\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\";\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\";\n\nexport const USER_DETAILS_REQUEST = \"USER_DETAILS_REQUEST\";\nexport const USER_DETAILS_SUCCESS = \"USER_DETAILS_SUCCESS\";\nexport const USER_DETAILS_FAIL = \"USER_DETAILS_FAIL\";\nexport const USER_DETAILS_RESET = \"USER_DETAILS_RESET\";\n\nexport const USER_UPDATE_PROFILE_REQUEST = \"USER_UPDATE_PROFILE_REQUEST\";\nexport const USER_UPDATE_PROFILE_SUCCESS = \"USER_UPDATE_PROFILE_SUCCESS\";\nexport const USER_UPDATE_PROFILE_FAIL = \"USER_UPDATE_PROFILE_FAIL\";\nexport const USER_UPDATE_PROFILE_RESET = \"USER_UPDATE_PROFILE_RESET\";\n\nexport const USER_LIST_REQUEST = \"USER_LIST_REQUEST\";\nexport const USER_LIST_SUCCESS = \"USER_LIST_SUCCESS\";\nexport const USER_LIST_FAIL = \"USER_LIST_FAIL\";\nexport const USER_LIST_RESET = \"USER_LIST_RESET\";\n\nexport const USER_DELETE_REQUEST = \"USER_DELETE_REQUEST\";\nexport const USER_DELETE_SUCCESS = \"USER_DELETE_SUCCESS\";\nexport const USER_DELETE_FAIL = \"USER_DELETE_FAIL\";\n\nexport const USER_UPDATE_REQUEST = \"USER_UPDATE_REQUEST\";\nexport const USER_UPDATE_SUCCESS = \"USER_UPDATE_SUCCESS\";\nexport const USER_UPDATE_FAIL = \"USER_UPDATE_FAIL\";\nexport const USER_UPDATE_RESET = \"USER_UPDATE_RESET\";\n","import {\n  ORDER_CREATE_FAIL,\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_DELIVER_FAIL,\n  ORDER_DELIVER_REQUEST,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DETAILS_FAIL,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_LIST_FAIL,\n  ORDER_LIST_MY_FAIL,\n  ORDER_LIST_MY_REQUEST,\n  ORDER_LIST_MY_RESET,\n  ORDER_LIST_MY_SUCCESS,\n  ORDER_LIST_REQUEST,\n  ORDER_LIST_SUCCESS,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_RESET,\n  ORDER_PAY_SUCCESS,\n  ORDER_DELIVER_RESET,\n} from \"../constants/orderConstants\";\n\nexport const orderCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_CREATE_REQUEST:\n      return {\n        loading: true,\n      };\n    case ORDER_CREATE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n        order: action.payload,\n      };\n    case ORDER_CREATE_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport function orderDetailsReducer(\n  state = { loading: true, orderItems: [], shippingAddress: {} },\n  action\n) {\n  switch (action.type) {\n    case ORDER_DETAILS_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case ORDER_DETAILS_SUCCESS:\n      return {\n        loading: false,\n        order: action.payload,\n      };\n    case ORDER_DETAILS_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n\nexport function orderPayReducer(state = {}, action) {\n  switch (action.type) {\n    case ORDER_PAY_REQUEST:\n      return {\n        loading: true,\n      };\n    case ORDER_PAY_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n      };\n    case ORDER_PAY_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n    case ORDER_PAY_RESET:\n      return {};\n    default:\n      return state;\n  }\n}\n\nexport function orderDeliverReducer(state = {}, action) {\n  switch (action.type) {\n    case ORDER_DELIVER_REQUEST:\n      return {\n        loading: true,\n      };\n    case ORDER_DELIVER_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n      };\n    case ORDER_DELIVER_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n    case ORDER_DELIVER_RESET:\n      return {};\n    default:\n      return state;\n  }\n}\n\nexport function orderListMyReducer(state = { orders: [] }, action) {\n  switch (action.type) {\n    case ORDER_LIST_MY_REQUEST:\n      return {\n        loading: true,\n      };\n    case ORDER_LIST_MY_SUCCESS:\n      return {\n        loading: false,\n        orders: action.payload,\n      };\n    case ORDER_LIST_MY_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n    case ORDER_LIST_MY_RESET:\n      return { orders: [] };\n    default:\n      return state;\n  }\n}\n\nexport function orderListReducer(state = { orders: [] }, action) {\n  switch (action.type) {\n    case ORDER_LIST_REQUEST:\n      return {\n        loading: true,\n      };\n    case ORDER_LIST_SUCCESS:\n      return {\n        loading: false,\n        orders: action.payload,\n      };\n    case ORDER_LIST_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","export const ORDER_CREATE_REQUEST = \"ORDER_CREATE_REQUEST\";\nexport const ORDER_CREATE_SUCCESS = \"ORDER_CREATE_SUCCESS\";\nexport const ORDER_CREATE_FAIL = \"ORDER_CREATE_FAIL\";\n\nexport const ORDER_DETAILS_REQUEST = \"ORDER_DETAILS_REQUEST\";\nexport const ORDER_DETAILS_SUCCESS = \"ORDER_DETAILS_SUCCESS\";\nexport const ORDER_DETAILS_FAIL = \"ORDER_DETAILS_FAIL\";\n\nexport const ORDER_PAY_REQUEST = \"ORDER_PAY_REQUEST\";\nexport const ORDER_PAY_SUCCESS = \"ORDER_PAY_SUCCESS\";\nexport const ORDER_PAY_FAIL = \"ORDER_PAY_FAIL\";\nexport const ORDER_PAY_RESET = \"ORDER_PAY_RESET\";\n\nexport const ORDER_LIST_MY_REQUEST = \"ORDER_LIST_MY_REQUEST\";\nexport const ORDER_LIST_MY_SUCCESS = \"ORDER_LIST_MY_SUCCESS\";\nexport const ORDER_LIST_MY_FAIL = \"ORDER_LIST_MY_FAIL\";\nexport const ORDER_LIST_MY_RESET = \"ORDER_LIST_MY_RESET\";\n\nexport const ORDER_LIST_REQUEST = \"ORDER_LIST_REQUEST\";\nexport const ORDER_LIST_SUCCESS = \"ORDER_LIST_SUCCESS\";\nexport const ORDER_LIST_FAIL = \"ORDER_LIST_FAIL\";\n\nexport const ORDER_DELIVER_REQUEST = \"ORDER_DELIVER_REQUEST\";\nexport const ORDER_DELIVER_SUCCESS = \"ORDER_DELIVER_SUCCESS\";\nexport const ORDER_DELIVER_FAIL = \"ORDER_DELIVER_FAIL\";\nexport const ORDER_DELIVER_RESET = \"ORDER_DELIVER_RESET\";\n","import React from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\n\nconst Footer = () => {\n  return (\n    <footer>\n      <Container>\n        <Row>\n          <Col className=\"text-center py-3\">Copyright &copy; Camstòr</Col>\n        </Row>\n      </Container>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import axios from \"axios\";\nimport { ORDER_LIST_MY_RESET } from \"../constants/orderConstants\";\nimport {\n  USER_DELETE_FAIL,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DETAILS_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_RESET,\n  USER_DETAILS_SUCCESS,\n  USER_LIST_FAIL,\n  USER_LIST_REQUEST,\n  USER_LIST_RESET,\n  USER_LIST_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGIN_LOGOUT,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n} from \"../constants/userConstants\";\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST,\n    });\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const { data } = await axios.post(\n      \"/api/users/login\",\n      { email, password },\n      config\n    );\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const logout = () => (dispatch) => {\n  localStorage.removeItem(\"userInfo\");\n  dispatch({ type: USER_LOGIN_LOGOUT });\n  dispatch({ type: USER_DETAILS_RESET });\n  dispatch({ type: ORDER_LIST_MY_RESET });\n  dispatch({ type: USER_LIST_RESET });\n};\n\nexport const register = (name, email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST,\n    });\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const { data } = await axios.post(\n      \"/api/users\",\n      { name, email, password },\n      config\n    );\n\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data,\n    });\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/users/${id}`, config);\n\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(`/api/users/profile`, user, config);\n\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/users`, config);\n\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const deleteUsers = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    await axios.delete(`/api/users/${id}`, config);\n\n    dispatch({\n      type: USER_DELETE_SUCCESS,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const updateUsers = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config);\n\n    dispatch({ type: USER_UPDATE_SUCCESS });\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n","import React, { useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\n\nconst SearchBox = ({ history }) => {\n  const [keyword, setKeyword] = useState(\"\");\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (keyword.trim()) {\n      history.push(`/search/${keyword}`);\n    } else {\n      history.push(\"/\");\n    }\n  };\n\n  return (\n    <Form onSubmit={submitHandler} inline>\n      <Form.Control\n        type=\"text\"\n        name=\"q\"\n        onChange={(e) => setKeyword(e.target.value)}\n        placeholder=\"Search Products...\"\n        className=\"mr-sm-2 ml-sm-5\"\n      ></Form.Control>\n      <Button type=\"submit\" variant=\"outline-success\" className=\"p-2\">\n        Search\n      </Button>\n    </Form>\n  );\n};\n\nexport default SearchBox;\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Container, Nav, Navbar, NavDropdown } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { logout } from \"../actions/userActions\";\nimport SearchBox from \"./SearchBox\";\n\nconst Header = () => {\n  const userLogin = useSelector((state) => state.userLogin);\n  const dispatch = useDispatch();\n  const { userInfo } = userLogin;\n  const logoutHandler = () => {\n    dispatch(logout());\n  };\n  return (\n    <header>\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\n        <Container>\n          <LinkContainer to=\"/\">\n            <Navbar.Brand>Camstòr</Navbar.Brand>\n          </LinkContainer>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Route render={({ history }) => <SearchBox history={history} />} />\n            <Nav className=\"ml-auto\">\n              <LinkContainer to=\"/cart\">\n                <Nav.Link>\n                  <i className=\"fas fa-shopping-cart\"></i> Cart\n                </Nav.Link>\n              </LinkContainer>\n              {userInfo ? (\n                <NavDropdown title={userInfo.name} id=\"username\">\n                  <LinkContainer to=\"/profile\">\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\n                  </LinkContainer>\n                  <NavDropdown.Item onClick={logoutHandler}>\n                    Logout\n                  </NavDropdown.Item>\n                </NavDropdown>\n              ) : (\n                <LinkContainer to=\"/login\">\n                  <Nav.Link>\n                    <i className=\"fas fa-user\"></i> Sign In\n                  </Nav.Link>\n                </LinkContainer>\n              )}\n              {userInfo && userInfo.isAdmin && (\n                <NavDropdown title=\"Admin\" id=\"adminmenu\">\n                  <LinkContainer to=\"/admin/userlist\">\n                    <NavDropdown.Item>Users</NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer to=\"/admin/productlist\">\n                    <NavDropdown.Item>Products</NavDropdown.Item>\n                  </LinkContainer>\n\n                  <LinkContainer to=\"/admin/orderlist\">\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\n                  </LinkContainer>\n                </NavDropdown>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </header>\n  );\n};\n\nexport default Header;\n","import axios from \"axios\";\nimport {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_SAVE_PAYMENT_METHOD,\n  CART_SAVE_SHIPPING_ADDRESS,\n} from \"../constants/cartConstants\";\n\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n  const { data } = await axios.get(`/api/products/${id}`);\n\n  dispatch({\n    type: CART_ADD_ITEM,\n    payload: {\n      product: data._id,\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      countInStock: data.countInStock,\n      qty,\n    },\n  });\n\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\n};\n\nexport const removeFromCart = (id) => (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: id,\n  });\n\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\n};\n\nexport const saveShippingAddress = (data) => (dispatch) => {\n  dispatch({\n    type: CART_SAVE_SHIPPING_ADDRESS,\n    payload: data,\n  });\n\n  localStorage.setItem(\"shippingAddress\", JSON.stringify(data));\n};\n\nexport const savePaymentMethod = (data) => (dispatch) => {\n  dispatch({\n    type: CART_SAVE_PAYMENT_METHOD,\n    payload: data,\n  });\n\n  localStorage.setItem(\"paymentMethod\", JSON.stringify(data));\n};\n","import React from \"react\";\nimport { Alert } from \"react-bootstrap\";\nconst Message = ({ variant, children }) => {\n  return <Alert variant={variant}>{children}</Alert>;\n};\nMessage.defaultProps = {\n  variant: \"info\",\n};\n\nexport default Message;\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Button,\n  Card,\n  Col,\n  Form,\n  Image,\n  ListGroup,\n  Row,\n} from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addToCart, removeFromCart } from \"../actions/cartActions\";\nimport Message from \"../components/Message\";\n\nconst CartScreen = ({ match, location, history }) => {\n  const productId = match.params.id;\n  const qty = location.search ? Number(location.search.split(\"=\")[1]) : 1;\n  const dispatch = useDispatch();\n\n  const cart = useSelector((state) => state.cart);\n  const { cartItems } = cart;\n\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty));\n    }\n  }, [dispatch, productId, qty]);\n  const removeFromCartHandler = (id) => {\n    dispatch(removeFromCart(id));\n  };\n\n  const checkoutHandler = () => {\n    history.push(\"/login?redirect=shipping\");\n  };\n  return (\n    <Row>\n      <Col md={8}>\n        <h1>Shopping Cart</h1>\n        {cartItems.length === 0 ? (\n          <Message>\n            Your cart is empty <Link to=\"/\">Go Back</Link>\n          </Message>\n        ) : (\n          <ListGroup variant=\"flush\">\n            {cartItems.map((item) => (\n              <ListGroup.Item key={item.product}>\n                <Row>\n                  <Col md={2}>\n                    <Image src={item.image} alt={item.name} fluid rounded />\n                  </Col>\n                  <Col md={3}>\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\n                  </Col>\n                  <Col md={2}>${item.price}</Col>\n                  <Col md={2}>\n                    <Form.Control\n                      className=\"fromSelectProductItem\"\n                      as=\"select\"\n                      value={item.qty}\n                      onChange={({ target }) =>\n                        dispatch(addToCart(item.product, Number(target.value)))\n                      }\n                    >\n                      {[...Array(item.countInStock).keys()].map((x) => (\n                        <option key={x + 1} value={x + 1}>\n                          {x + 1}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  </Col>\n                  <Col md={2}>\n                    <Button\n                      type=\"button\"\n                      variant=\"white\"\n                      onClick={() => removeFromCartHandler(item.product)}\n                    >\n                      <i className=\"fas fa-trash\"></i>\n                    </Button>\n                  </Col>\n                </Row>\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n        )}\n      </Col>\n      <Col md={4}>\n        <Card>\n          <ListGroup.Item>\n            <h2>\n              Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\n              items\n            </h2>\n            $\n            {cartItems\n              .reduce((acc, item) => acc + item.qty * item.price, 0)\n              .toFixed(2)}\n          </ListGroup.Item>\n          <ListGroup.Item>\n            <Button\n              type=\"button\"\n              className=\"btn-block\"\n              disabled={cartItems.length === 0}\n              onClick={checkoutHandler}\n            >\n              Proceed To Checkout\n            </Button>\n          </ListGroup.Item>\n        </Card>\n      </Col>\n    </Row>\n  );\n};\n\nexport default CartScreen;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Rating = ({ value, text, color }) => {\n  return (\n    <div className=\"rating\">\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 1\n              ? \"fas fa-star\"\n              : value >= 0.5\n              ? \"fas fa-star-half-alt\"\n              : \"far fa-star\"\n          }\n        ></i>\n      </span>\n\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 2\n              ? \"fas fa-star\"\n              : value >= 1.5\n              ? \"fas fa-star-half-alt\"\n              : \"far fa-star\"\n          }\n        ></i>\n      </span>\n\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 3\n              ? \"fas fa-star\"\n              : value >= 2.5\n              ? \"fas fa-star-half-alt\"\n              : \"far fa-star\"\n          }\n        ></i>\n      </span>\n\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 4\n              ? \"fas fa-star\"\n              : value >= 3.5\n              ? \"fas fa-star-half-alt\"\n              : \"far fa-star\"\n          }\n        ></i>\n      </span>\n\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 5\n              ? \"fas fa-star\"\n              : value >= 4.5\n              ? \"fas fa-star-half-alt\"\n              : \"far fa-star\"\n          }\n        ></i>\n      </span>\n      <p>{text && text}</p>\n    </div>\n  );\n};\n\nRating.defaultProps = {\n  color: \"#f8e825\",\n};\n\nRating.prototype = {\n  value: PropTypes.number.isRequired,\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string,\n};\nexport default Rating;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport Rating from \"./Rating\";\n\nconst Product = ({ product }) => {\n  let valueNumReviews = \"\";\n  if (product.numReviews >= 1000 && product.numReviews <= 10000) {\n    valueNumReviews = `${product.numReviews\n      .toString()\n      .substring(0, 1)}.${product.numReviews.toString().substring(1, 2)}K`;\n  }\n  if (product.numReviews >= 10000 && product.numReviews <= 100000) {\n    valueNumReviews = `${product.numReviews\n      .toString()\n      .substring(0, 2)}.${product.numReviews.toString().substring(1, 2)}K`;\n  }\n  if (product.numReviews >= 100000 && product.numReviews <= 1000000) {\n    valueNumReviews = `${product.numReviews\n      .toString()\n      .substring(0, 3)}.${product.numReviews.toString().substring(1, 2)}K`;\n  }\n  if (product.numReviews >= 1000000) {\n    valueNumReviews = `${product.numReviews\n      .toString()\n      .substring(0, 1)}.${product.numReviews.toString().substring(1, 3)}M`;\n  }\n  if (product.numReviews <= 1000 && product.numReviews > 0) {\n    valueNumReviews = product.numReviews;\n  }\n\n  return (\n    <Card className=\"my-3 p-3 rounded\">\n      <Link to={`product/${product._id}`}>\n        <Card.Img src={product.image} />\n      </Link>\n\n      <Card.Body>\n        <Link to={`product/${product._id}`}>\n          <Card.Title as=\"div\">\n            <strong>{product.name}</strong>\n          </Card.Title>\n        </Link>\n\n        <Card.Text as=\"div\">\n          <Rating value={product.rating} text={`${valueNumReviews} reviews`} />\n        </Card.Text>\n        <Card.Text as=\"h3\">${product.price}</Card.Text>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default Product;\n","import axios from \"axios\";\nimport {\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_CREATE_REVIEW_FAIL,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_TOP_REQUEST,\n  PRODUCT_TOP_SUCCESS,\n  PRODUCT_TOP_FAIL,\n} from \"../constants/productConstants\";\n\nexport const listProducts = (keyword = \"\", pageNumber = \"\") => async (\n  dispatch\n) => {\n  try {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST,\n    });\n\n    const { data } = await axios.get(\n      `/api/products?keyword=${keyword}&pageNumber=${pageNumber}`\n    );\n\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const listProductDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST,\n    });\n\n    const { data } = await axios.get(`/api/products/${id}`);\n\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_DELETE_REQUEST,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    await axios.delete(`/api/products/${id}`, config);\n\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const createProduct = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REQUEST,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.post(`/api/products`, {}, config);\n\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const updateProduct = (product) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_UPDATE_REQUEST,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.put(\n      `/api/products/${product._id}`,\n      product,\n      config\n    );\n\n    dispatch({\n      type: PRODUCT_UPDATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const createProductReview = (productId, review) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_REQUEST,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    await axios.post(`/api/products/${productId}/reviews`, review, config);\n\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_SUCCESS,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const listTopProducts = (keyword = \"\", pageNumber = \"\") => async (\n  dispatch\n) => {\n  try {\n    dispatch({\n      type: PRODUCT_TOP_REQUEST,\n    });\n\n    const { data } = await axios.get(`/api/products/top`);\n\n    dispatch({\n      type: PRODUCT_TOP_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_TOP_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n","import React from \"react\";\nimport { Spinner } from \"react-bootstrap\";\nconst Loader = () => {\n  return (\n    <Spinner\n      animation=\"border\"\n      role=\"status\"\n      style={{\n        width: \"70px\",\n        height: \"70px\",\n        margin: \"auto\",\n        display: \"block\",\n      }}\n    >\n      <span className=\"sr-only\">Loaing...</span>\n    </Spinner>\n  );\n};\n\nexport default Loader;\n","import React from \"react\";\nimport { Pagination } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nconst Paginate = ({ pages, page, isAdmin = false, keyword = \"\" }) => {\n  return (\n    pages > 1 && (\n      <Pagination>\n        {[...Array(pages).keys()].map((x) => (\n          <LinkContainer\n            key={x + 1}\n            to={\n              !isAdmin\n                ? keyword\n                  ? `/search/${keyword}/page/${x + 1}`\n                  : `/page/${x + 1}`\n                : `/admin/productlist/${x + 1}`\n            }\n          >\n            <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\n          </LinkContainer>\n        ))}\n      </Pagination>\n    )\n  );\n};\n\nexport default Paginate;\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Carousel, Image } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"./Loader\";\nimport Message from \"./Message\";\nimport { listTopProducts } from \"../actions/productActions\";\n\nconst ProductCarousel = () => {\n  const dispatch = useDispatch();\n\n  const productTopRated = useSelector((state) => state.productTopRated);\n  const { loading, error, products } = productTopRated;\n\n  useEffect(() => {\n    dispatch(listTopProducts());\n  }, [dispatch]);\n\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message variant=\"danger\">{error}</Message>\n  ) : (\n    <Carousel pause=\"hover\" className=\"bg-dark\">\n      {products.map((product) => (\n        <Carousel.Item key={product._id}>\n          <Link to={`/product/${product._id}`}>\n            <Image src={product.image} alt={product.name} fluid />\n            <Carousel.Caption className=\"carousel-caption\">\n              <h2>\n                {product.name} (${product.price})\n              </h2>\n            </Carousel.Caption>\n          </Link>\n        </Carousel.Item>\n      ))}\n    </Carousel>\n  );\n};\n\nexport default ProductCarousel;\n","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\nconst Meta = ({ title, description, keyword }) => {\n  return (\n    <Helmet>\n      <title>{title}</title>\n      <meta name=\"description\" content={description} />\n      <meta name=\"keyword\" content={keyword} />\n    </Helmet>\n  );\n};\n\nMeta.defaultProps = {\n  title: \"Welcome To Camstòr\",\n  description: \"We sell the best products for cheap\",\n  keyword:\n    \"electronics, buy electronics, cheap eletronics, t-shirts, buy t-shirts, cheap t-shirts,cheap , hoodie, buy hoodie, cheap hoodie,cheap , clothes, buy clothes, cheap clothes,clothes for men, buy clothes for men, cheap clothes for men,clothes for women, buy clothes for women, cheap clothes for women,clothes children, buy clothes children, cheap clothes children\",\n};\n\nexport default Meta;\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Col, Row } from \"react-bootstrap\";\nimport Product from \"../components/Product\";\nimport { listProducts } from \"../actions/productActions\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport Paginate from \"../components/Paginate\";\nimport ProductCarousel from \"../components/ProductCarousel\";\nimport Meta from \"../components/Meta\";\n\nconst HomeScreen = ({ match }) => {\n  const keyword = match.params.keyword;\n\n  const pageNumber = match.params.pageNumber || 1;\n\n  const dispatch = useDispatch();\n\n  const productList = useSelector((state) => state.productList);\n  const { loading, error, products, page, pages } = productList;\n\n  useEffect(() => {\n    dispatch(listProducts(keyword, pageNumber));\n  }, [dispatch, keyword, pageNumber]);\n  return (\n    <>\n      <Meta />\n      {!keyword ? (\n        <ProductCarousel />\n      ) : (\n        <Link to=\"/\" className=\"btn btn-light\">\n          Go Back\n        </Link>\n      )}\n      <h1>Latest Products</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <>\n          <Row>\n            {products.map((product) => (\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                <Product product={product} />\n              </Col>\n            ))}\n          </Row>\n          <Paginate\n            pages={pages}\n            page={page}\n            keyword={keyword ? keyword : \"\"}\n          />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default HomeScreen;\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nconst FormContainer = ({ children }) => {\n  return (\n    <Container>\n      <Row>\n        <Col xs={12} md={6}>\n          {children}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default FormContainer;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport FormContainer from \"../components/FormContainer\";\nimport { login } from \"../actions/userActions\";\n\nconst LoginScreen = ({ location, history }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { loading, error, userInfo } = userLogin;\n\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [history, userInfo, redirect]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(login(email, password));\n  };\n\n  return (\n    <FormContainer>\n      <h1>Sign In</h1>\n      {error && <Message variant=\"danger\">{error}</Message>}\n      {loading && <Loader />}\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId=\"email\">\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Enter email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Enter password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type=\"submit\" variant=\"primary\">\n          Sign In\n        </Button>\n      </Form>\n\n      <Row className=\"py-3\">\n        <Col>\n          New Customer?{\" \"}\n          <Link to={redirect ? `/register?redirect=${redirect}` : \"/register\"}>\n            Register\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  );\n};\n\nexport default LoginScreen;\n","import React, { useEffect } from \"react\";\nimport { Table, Button } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { listOrders } from \"../actions/orderActions\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\n\nconst OrderListScreen = ({ history }) => {\n  const dispatch = useDispatch();\n\n  const orderList = useSelector((state) => state.orderList);\n  const { loading, error, orders } = orderList;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listOrders());\n    } else {\n      history.push(\"/login\");\n    }\n  }, [dispatch, history, userInfo]);\n\n  return (\n    <>\n      <h1>Orders</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <Table striped bordered hover responsive className=\"table-sm\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>USER</th>\n              <th>DATE</th>\n              <th>TOTAL</th>\n              <th>PAID</th>\n              <th>DELIVERED</th>\n              <th></th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {orders.map((order) => (\n              <tr key={order._id}>\n                <td>{order._id}</td>\n                <td>{order.user && order.user.name}</td>\n                <td>{order.createdAt.substring(0, 10)}</td>\n                <td>${order.totalPrice}</td>\n                <td>\n                  {order.isPaid ? (\n                    order.paidAt.substring(0, 10)\n                  ) : (\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\n                  )}\n                </td>\n                <td>\n                  {order.isDelivered ? (\n                    order.deliveredAt.substring(0, 10)\n                  ) : (\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\n                  )}\n                </td>\n                <td>\n                  <LinkContainer to={`/orders/${order._id}`}>\n                    <Button variant=\"light\" className=\"btn-sm\">\n                      Details\n                    </Button>\n                  </LinkContainer>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </>\n  );\n};\n\nexport default OrderListScreen;\n","import axios from \"axios\";\nimport {\n  ORDER_CREATE_FAIL,\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_DELIVER_FAIL,\n  ORDER_DELIVER_REQUEST,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DETAILS_FAIL,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_LIST_FAIL,\n  ORDER_LIST_MY_FAIL,\n  ORDER_LIST_MY_REQUEST,\n  ORDER_LIST_MY_SUCCESS,\n  ORDER_LIST_REQUEST,\n  ORDER_LIST_SUCCESS,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_SUCCESS,\n} from \"../constants/orderConstants\";\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.post(`/api/orders`, order, config);\n\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/orders/${id}`, config);\n\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const payOrder = (orderId, paymentResult) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(\n      `/api/orders/${orderId}/pay`,\n      paymentResult,\n      config\n    );\n\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const deliverOrder = (orderId) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DELIVER_REQUEST,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(\n      `/api/orders/${orderId._id}/deliver`,\n      {},\n      config\n    );\n\n    dispatch({\n      type: ORDER_DELIVER_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DELIVER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_MY_REQUEST,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/orders/myorders`, config);\n\n    dispatch({\n      type: ORDER_LIST_MY_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_MY_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_REQUEST,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/orders`, config);\n\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { PayPalButton } from \"react-paypal-button-v2\";\nimport { Link } from \"react-router-dom\";\nimport { Row, Col, ListGroup, Image, Card, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport {\n  getOrderDetails,\n  payOrder,\n  deliverOrder,\n} from \"../actions/orderActions\";\nimport {\n  ORDER_PAY_RESET,\n  ORDER_DELIVER_RESET,\n} from \"../constants/orderConstants\";\n\nconst OrderScreen = ({ match, history }) => {\n  const orderId = match.params.id;\n\n  const [sdkReady, setSdkReady] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const orderDetails = useSelector((state) => state.orderDetails);\n  const { order, loading, error } = orderDetails;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const orderPay = useSelector((state) => state.orderPay);\n  const { loading: loadingPay, success: successPay } = orderPay;\n\n  const orderDeliver = useSelector((state) => state.orderDeliver);\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver;\n\n  if (!loading) {\n    //   Calculate prices\n    const addDecimals = (num) => {\n      return (Math.round(num * 100) / 100).toFixed(2);\n    };\n\n    order.itemsPrice = addDecimals(\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n    );\n  }\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    }\n    const addPayPalScript = async () => {\n      const { data: clientId } = await axios.get(\"/api/config/paypal\");\n      const script = document.createElement(\"script\");\n      script.type = \"text/javascript\";\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\n      script.async = true;\n      script.onload = () => {\n        setSdkReady(true);\n      };\n      document.body.appendChild(script);\n    };\n\n    if (!order || successPay || order._id !== orderId || successDeliver) {\n      dispatch({ type: ORDER_PAY_RESET });\n      dispatch({ type: ORDER_DELIVER_RESET });\n      dispatch(getOrderDetails(orderId));\n    } else if (!order.isPaid) {\n      if (!window.paypal) {\n        addPayPalScript();\n      } else {\n        setSdkReady(true);\n      }\n    }\n  }, [dispatch, orderId, successPay, order, successDeliver, history, userInfo]);\n\n  const successPaymentHandler = (paymentResult) => {\n    dispatch(payOrder(orderId, paymentResult));\n  };\n\n  const deliverHandler = () => {\n    dispatch(deliverOrder(orderId));\n  };\n\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message variant=\"danger\">{error}</Message>\n  ) : (\n    <>\n      <h1>Order {order._id}</h1>\n      <Row>\n        <Col md={8}>\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                <strong>Name: </strong> {order.user.name}\n              </p>\n              <p>\n                <strong>Email: </strong>{\" \"}\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\n              </p>\n              <p>\n                <strong>Address:</strong>\n                {order.shippingAddress.address}, {order.shippingAddress.city}{\" \"}\n                {order.shippingAddress.postalCode},{\" \"}\n                {order.shippingAddress.country}\n              </p>\n              {order.isDelivered ? (\n                <Message variant=\"success\">\n                  Delivered on {order.deliveredAt}\n                </Message>\n              ) : (\n                <Message variant=\"danger\">Not Delivered</Message>\n              )}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <p>\n                <strong>Method: </strong>\n                {order.paymentMethod}\n              </p>\n              {order.isPaid ? (\n                <Message variant=\"success\">Paid on {order.paidAt}</Message>\n              ) : (\n                <Message variant=\"danger\">Not Paid</Message>\n              )}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n              {order.orderItems.length === 0 ? (\n                <Message>Order is empty</Message>\n              ) : (\n                <ListGroup variant=\"flush\">\n                  {order.orderItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n                        <Col md={4}>\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items</Col>\n                  <Col>${order.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping</Col>\n                  <Col>${order.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax</Col>\n                  <Col>${order.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total</Col>\n                  <Col>${order.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              {!order.isPaid && (\n                <ListGroup.Item>\n                  {loadingPay && <Loader />}\n                  {!sdkReady ? (\n                    <Loader />\n                  ) : (\n                    <PayPalButton\n                      amount={order.totalPrice}\n                      onSuccess={successPaymentHandler}\n                    />\n                  )}\n                </ListGroup.Item>\n              )}\n              {loadingDeliver && <Loader />}\n              {userInfo &&\n                userInfo.isAdmin &&\n                order.isPaid &&\n                !order.isDelivered && (\n                  <ListGroup.Item>\n                    <Button\n                      type=\"button\"\n                      className=\"btn btn-block\"\n                      onClick={deliverHandler}\n                    >\n                      Mark As Deliver\n                    </Button>\n                  </ListGroup.Item>\n                )}\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default OrderScreen;\n","import React from \"react\";\nimport { Nav } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\n  return (\n    <Nav className=\"justify-content-center mb-4\">\n      <Nav.Item>\n        {step1 ? (\n          <LinkContainer to=\"/login\">\n            <Nav.Link>Sign In</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Sign In</Nav.Link>\n        )}\n      </Nav.Item>\n\n      <Nav.Item>\n        {step2 ? (\n          <LinkContainer to=\"/shipping\">\n            <Nav.Link>Shipping</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Shippping</Nav.Link>\n        )}\n      </Nav.Item>\n\n      <Nav.Item>\n        {step3 ? (\n          <LinkContainer to=\"/payment\">\n            <Nav.Link>Payment</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Payment</Nav.Link>\n        )}\n      </Nav.Item>\n\n      <Nav.Item>\n        {step4 ? (\n          <LinkContainer to=\"/placeorder\">\n            <Nav.Link>Place Order</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Place Order</Nav.Link>\n        )}\n      </Nav.Item>\n    </Nav>\n  );\n};\n\nexport default CheckoutSteps;\n","import React, { useState } from \"react\";\nimport { Form, Button, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FormContainer from \"../components/FormContainer\";\nimport { savePaymentMethod } from \"../actions/cartActions\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\n\nconst PaymentScreen = ({ history }) => {\n  const cart = useSelector((state) => state.cart);\n  const { shippingAddress } = cart;\n\n  if (!shippingAddress) {\n    history.push(\"/shipping\");\n  }\n\n  const [paymentMethod, setPaymentMethod] = useState(\"PayPal\");\n\n  const dispatch = useDispatch();\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(savePaymentMethod(paymentMethod));\n    history.push(\"/placeorder\");\n  };\n\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 step3 />\n      <h1>Shipping</h1>\n\n      <Form onSubmit={submitHandler}>\n        <Form.Group>\n          <Form.Label as=\"legend\">Select Methods</Form.Label>\n\n          <Col>\n            <Form.Check\n              type=\"radio\"\n              label=\"PayPal or Credit Card\"\n              id=\"PayPal\"\n              name=\"paymentMenthod\"\n              value=\"PayPal\"\n              onChange={(e) => setPaymentMethod(e.target.value)}\n              checked\n            ></Form.Check>\n          </Col>\n        </Form.Group>\n\n        <Button type=\"submit\" variant=\"primary\">\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  );\n};\n\nexport default PaymentScreen;\n","import React, { useEffect } from \"react\";\nimport { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\nimport { Link } from \"react-router-dom\";\nimport { createOrder } from \"../actions/orderActions\";\n\nconst PlaceOrderScreen = ({ history }) => {\n  const cart = useSelector((state) => state.cart);\n  const dispatch = useDispatch();\n\n  const addDecimals = (num) => {\n    return (Math.round(num * 100) / 100).toFixed(2);\n  };\n  // calculate Price\n\n  cart.itemsPrice = addDecimals(\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n  );\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100);\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)));\n\n  cart.totalPrice = (\n    Number(cart.itemsPrice) +\n    Number(cart.shippingPrice) +\n    Number(cart.taxPrice)\n  ).toFixed(2);\n\n  const orderCreate = useSelector((state) => state.orderCreate);\n  const { order, error, success } = orderCreate;\n\n  useEffect(() => {\n    if (success) {\n      history.push(`/orders/${order._id}`);\n    }\n    // eslint-disable-next-line\n  }, [history, success]);\n\n  const placeOrderHandler = () => {\n    dispatch(\n      createOrder({\n        orderItems: cart.cartItems,\n        shippingAddress: cart.shippingAddress,\n        paymentMethod: cart.paymentMethod,\n        itemsPrice: cart.itemsPrice,\n        shippingPrice: cart.shippingPrice,\n        taxPrice: cart.taxPrice,\n        totalPrice: cart.totalPrice,\n      })\n    );\n  };\n\n  return (\n    <>\n      <CheckoutSteps step1 step2 step3 step4 />\n      <Row>\n        <Col md={8}>\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                <strong>Address:</strong>\n                {cart.shippingAddress.address}, {cart.shippingAddress.city}{\" \"}\n                {cart.shippingAddress.postalcode},{\" \"}\n                {cart.shippingAddress.country}\n              </p>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <strong>Method:</strong>\n              {cart.paymentMethod}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n              {cart.cartItems.length === 0 ? (\n                <Message>Your cart is empty</Message>\n              ) : (\n                <ListGroup variant=\"flush\">\n                  {cart.cartItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n\n                        <Col md={4}>\n                          {item.qty} x ${item.price} = $\n                          {(item.qty * item.price).toFixed(2)}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <h2>Order Summery</h2>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items</Col>\n                  <Col>${cart.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping</Col>\n                  <Col>${cart.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax</Col>\n                  <Col>${cart.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total</Col>\n                  <Col>${cart.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                {error && <Message variant=\"danger\">{error}</Message>}\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Button\n                  type=\"button\"\n                  disabled={cart.cartItems.length === 0}\n                  className=\"btn-block\"\n                  onClick={placeOrderHandler}\n                >\n                  Place Order\n                </Button>\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default PlaceOrderScreen;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport FormContainer from \"../components/FormContainer\";\nimport { listProductDetails, updateProduct } from \"../actions/productActions\";\nimport { PRODUCT_UPDATE_RESET } from \"../constants/productConstants\";\n\nconst ProductEditScreen = ({ match, history }) => {\n  const productId = match.params.id;\n\n  const [name, setName] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [image, setImage] = useState(\"\");\n  const [brand, setBrand] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [countInStock, setCountInStock] = useState(0);\n  const [description, setDescription] = useState(\"\");\n  const [uploading, setUploading] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const productDetails = useSelector((state) => state.productDetails);\n  const { loading, error, product } = productDetails;\n\n  const productUpdate = useSelector((state) => state.productUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = productUpdate;\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: PRODUCT_UPDATE_RESET });\n    } else {\n      if (!product.name || product._id !== productId) {\n        dispatch(listProductDetails(productId));\n      } else {\n        setName(product.name);\n        setPrice(product.price);\n        setImage(product.image);\n        setBrand(product.brand);\n        setCategory(product.category);\n        setCountInStock(product.countInStock);\n        setDescription(product.description);\n      }\n    }\n  }, [dispatch, history, productId, product, successUpdate]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    // Update Product\n    dispatch(\n      updateProduct({\n        _id: productId,\n        name,\n        price,\n        image,\n        brand,\n        category,\n        description,\n        countInStock,\n      })\n    );\n  };\n\n  const uploadFileHandler = async (e) => {\n    const file = e.target.files[0];\n    const formData = new FormData();\n    formData.append(\"image\", file);\n    setUploading(true);\n\n    try {\n      const config = {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      };\n\n      const { data } = await axios.post(\"/api/upload\", formData, config);\n      setImage(data);\n      setUploading(false);\n    } catch (error) {\n      console.error(error);\n      setUploading(false);\n    }\n  };\n\n  return (\n    <>\n      <Link to=\"/admin/productlist\" className=\"btn btn-light my-3\">\n        Go Back\n      </Link>\n      <FormContainer>\n        <h1>Edit Product</h1>\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant=\"danger\">{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId=\"name\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"price\">\n              <Form.Label>Price</Form.Label>\n              <Form.Control\n                type=\"number\"\n                placeholder=\"Enter price\"\n                value={price}\n                onChange={(e) => setPrice(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"image\">\n              <Form.Label>Image</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter image url\"\n                value={image}\n                onChange={(e) => setImage(e.target.value)}\n              ></Form.Control>\n              <Form.File\n                id=\"image-file\"\n                custom\n                label=\"Choose File\"\n                onChange={uploadFileHandler}\n              ></Form.File>\n              {uploading && <Loader />}\n            </Form.Group>\n\n            <Form.Group controlId=\"brand\">\n              <Form.Label>brand</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter brand\"\n                value={brand}\n                onChange={(e) => setBrand(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"countInStock\">\n              <Form.Label>countInStock</Form.Label>\n              <Form.Control\n                type=\"number\"\n                placeholder=\"Enter Count In Stock\"\n                value={countInStock}\n                onChange={(e) => setCountInStock(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"category\">\n              <Form.Label>Category</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter category\"\n                value={category}\n                onChange={(e) => setCategory(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"description\">\n              <Form.Label>Description</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter description\"\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n            <Button type=\"submit\" variant=\"primary\">\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  );\n};\n\nexport default ProductEditScreen;\n","import React, { useEffect } from \"react\";\nimport { Table, Button, Row, Col } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport {\n  listProducts,\n  deleteProduct,\n  createProduct,\n} from \"../actions/productActions\";\nimport { PRODUCT_CREATE_RESET } from \"../constants/productConstants\";\nimport Paginate from \"../components/Paginate\";\n\nconst ProductListScreen = ({ history, match }) => {\n  const pageNumber = match.params.pageNumber || 1;\n\n  const dispatch = useDispatch();\n\n  const productList = useSelector((state) => state.productList);\n  const { loading, error, products, page, pages } = productList;\n\n  const productCreate = useSelector((state) => state.productCreate);\n  const {\n    loading: loadingCreate,\n    error: errorCreate,\n    success: successCreate,\n    product: createdProduct,\n  } = productCreate;\n\n  const productDelete = useSelector((state) => state.productDelete);\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete,\n  } = productDelete;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  useEffect(() => {\n    dispatch({ type: PRODUCT_CREATE_RESET });\n\n    if (!userInfo.isAdmin) {\n      history.push(\"/login\");\n    }\n\n    if (successCreate) {\n      history.push(`/admin/product/${createdProduct._id}/edit`);\n    } else {\n      dispatch(listProducts(\"\", pageNumber));\n    }\n  }, [\n    dispatch,\n    history,\n    userInfo,\n    successDelete,\n    successCreate,\n    createdProduct,\n    pageNumber,\n  ]);\n  const deleteHandler = (id) => {\n    if (window.confirm(\"Are you sure?\")) {\n      // Dispatch delete product\n      dispatch(deleteProduct(id));\n    }\n  };\n  const createProductHandler = () => {\n    // Dispatch create product\n    dispatch(createProduct());\n  };\n  return (\n    <>\n      <Row className=\"align-items-center\">\n        <Col>\n          <h1>Products</h1>\n        </Col>\n        <Col className=\"text-right\">\n          <Button className=\"my-3\" onClick={createProductHandler}>\n            <i className=\"fas fa-plus\"></i> Create Product\n          </Button>\n        </Col>\n      </Row>\n      {loadingDelete && <Loader />}\n      {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\n      {loadingCreate && <Loader />}\n      {errorCreate && <Message variant=\"danger\">{errorCreate}</Message>}\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <>\n          <Table striped bordered hover responsive className=\"table-sm\">\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>NAME</th>\n                <th>PRICE</th>\n                <th>CATEGORY</th>\n                <th>BRAND</th>\n                <th></th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {products.map((product) => (\n                <tr key={product._id}>\n                  <td>{product._id}</td>\n                  <td>{product.name}</td>\n                  <td>${product.price}</td>\n                  <td>{product.category}</td>\n                  <td>{product.brand}</td>\n                  <td>\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                      <Button variant=\"light\" className=\"btn-sm\">\n                        <i className=\"fas fa-edit\"></i>\n                      </Button>\n                    </LinkContainer>\n                    <Button\n                      variant=\"light\"\n                      className=\"btn-sm\"\n                      onClick={() => deleteHandler(product._id)}\n                    >\n                      <i className=\"fas fa-trash\" style={{ color: \"red\" }}></i>\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n          <Paginate pages={pages} page={page} isAdmin={true} />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default ProductListScreen;\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Row,\n  Col,\n  Image,\n  ListGroup,\n  Card,\n  Button,\n  Form,\n} from \"react-bootstrap\";\nimport Rating from \"../components/Rating\";\nimport {\n  listProductDetails,\n  createProductReview,\n} from \"../actions/productActions\";\nimport { PRODUCT_CREATE_REVIEW_RESET } from \"../constants/productConstants\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport Meta from \"../components/Meta\";\n\nconst ProductScreen = ({ match, history }) => {\n  const [qty, setQty] = useState(1);\n  const [rating, setRating] = useState(0);\n  const [comment, setComment] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const productDetails = useSelector((state) => state.productDetails);\n  const { loading, error, product } = productDetails;\n\n  const productReviewCreate = useSelector((state) => state.productReviewCreate);\n  const {\n    error: errorProductReview,\n    success: successProductReview,\n  } = productReviewCreate;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  let valueNumReviews = \"\";\n\n  if (!loading && !error) {\n    if (product.numReviews >= 1000 && product.numReviews <= 10000) {\n      valueNumReviews = `${product.numReviews\n        .toString()\n        .substring(0, 1)}.${product.numReviews.toString().substring(1, 2)}K`;\n    }\n    if (product.numReviews >= 10000 && product.numReviews <= 100000) {\n      valueNumReviews = `${product.numReviews\n        .toString()\n        .substring(0, 2)}.${product.numReviews.toString().substring(1, 2)}K`;\n    }\n    if (product.numReviews >= 100000 && product.numReviews <= 1000000) {\n      valueNumReviews = `${product.numReviews\n        .toString()\n        .substring(0, 3)}.${product.numReviews.toString().substring(1, 2)}K`;\n    }\n    if (product.numReviews >= 1000000) {\n      valueNumReviews = `${product.numReviews\n        .toString()\n        .substring(0, 1)}.${product.numReviews.toString().substring(1, 3)}M`;\n    }\n    if (product.numReviews <= 1000 && product.numReviews > 0) {\n      valueNumReviews = product.numReviews;\n    }\n  }\n\n  useEffect(() => {\n    if (successProductReview) {\n      alert(\"Review Submitted\");\n      setRating(0);\n      setComment(\"\");\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET });\n    }\n\n    dispatch(listProductDetails(match.params.id));\n  }, [dispatch, match, successProductReview]);\n\n  const addToCartHandler = () => {\n    history.push(`/cart/${match.params.id}?qty=${qty}`);\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(\n      createProductReview(match.params.id, {\n        rating,\n        comment,\n      })\n    );\n  };\n  return (\n    <>\n      <Link className=\"btn btn-ligth my-3\" to=\"/\">\n        Go Back\n      </Link>\n\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <>\n          <Meta\n            title={product.name}\n            keyword={`${product.name}, $${product.price}`}\n          />\n          <Row>\n            <Col md={6}>\n              <Image src={product.image} alt={product.name} fluid />\n            </Col>\n\n            <Col md={3}>\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item>\n                  <h3>{product.name}</h3>\n                </ListGroup.Item>\n              </ListGroup>\n\n              <ListGroup.Item>\n                <Rating\n                  value={product.rating}\n                  text={`${valueNumReviews} reviews`}\n                />\n              </ListGroup.Item>\n              <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\n              <ListGroup.Item>\n                Description: {product.description}\n              </ListGroup.Item>\n            </Col>\n            <Col md={3}>\n              <Card>\n                <ListGroup variant=\"flush\">\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Price:</Col>\n                      <Col>\n                        <strong>${product.price}</strong>\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Status:</Col>\n                      <Col>\n                        {product.countInStock > 0 ? \"In Stock\" : \"Out Of Stock\"}\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n                  {product.countInStock > 0 && (\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>Qty</Col>\n                        <Col>\n                          <Form.Control\n                            className=\"fromSelectProductItem\"\n                            as=\"select\"\n                            value={qty}\n                            onChange={({ target }) =>\n                              setQty(Number(target.value))\n                            }\n                          >\n                            {[...Array(product.countInStock).keys()].map(\n                              (x) => (\n                                <option key={x + 1} value={x + 1}>\n                                  {x + 1}\n                                </option>\n                              )\n                            )}\n                          </Form.Control>\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  )}\n                  <ListGroup.Item>\n                    <Button\n                      className=\"btn btn-block\"\n                      type=\"button\"\n                      disabled={product.countInStock === 0}\n                      onClick={addToCartHandler}\n                    >\n                      Add To Cart\n                    </Button>\n                  </ListGroup.Item>\n                </ListGroup>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col md={6}>\n              <h2>Reviews</h2>\n              {product.reviews.length === 0 && <Message>No Reviews</Message>}\n              <ListGroup variant=\"flush\">\n                {product.reviews.map((review) => (\n                  <ListGroup.Item key={review._id}>\n                    <strong>{review.name}</strong>\n                    <Rating value={review.rating} />\n                    <p>{review.createdAt.substring(0, 10)}</p>\n                    <p>{review.comment}</p>\n                  </ListGroup.Item>\n                ))}\n                <ListGroup.Item>\n                  <h2>Write a Customer Review</h2>\n                  {errorProductReview && (\n                    <Message variant=\"danger\">{errorProductReview}</Message>\n                  )}\n                  {userInfo ? (\n                    <Form onSubmit={submitHandler}>\n                      <Form.Group controlId=\"rating\">\n                        <Form.Label>Rating</Form.Label>\n                        <Form.Control\n                          as=\"select\"\n                          value={rating}\n                          onChange={(e) => setRating(e.target.value)}\n                        >\n                          <option value=\"\">Select...</option>\n                          <option value=\"1\">1 - Poor</option>\n                          <option value=\"2\">2 - Fair</option>\n                          <option value=\"3\">3 - Good</option>\n                          <option value=\"4\">4 - Very Good</option>\n                          <option value=\"5\">5 - Excellent</option>\n                        </Form.Control>\n                      </Form.Group>\n                      <Form.Group controlId=\"comment\">\n                        <Form.Label>Commet</Form.Label>\n                        <Form.Control\n                          as=\"textarea\"\n                          row=\"3\"\n                          value={comment}\n                          onChange={(e) => setComment(e.target.value)}\n                        ></Form.Control>\n                      </Form.Group>\n                      <Button type=\"submit\" variant=\"primary\">\n                        Submit\n                      </Button>\n                    </Form>\n                  ) : (\n                    <Message>\n                      Please <Link to=\"/login\">sign in </Link>to write a review\n                    </Message>\n                  )}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n          </Row>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default ProductScreen;\n","import React, { useState, useEffect } from \"react\";\nimport { Form, Button, Row, Col, Table } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { getUserDetails, updateUserProfile } from \"../actions/userActions\";\nimport { listMyOrders } from \"../actions/orderActions\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nconst ProfileScreen = ({ location, history }) => {\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const userDetails = useSelector((state) => state.userDetails);\n  const { loading, error, user } = userDetails;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\n  const { success } = userUpdateProfile;\n\n  const ordersListMy = useSelector((state) => state.ordersListMy);\n  const { loading: loadingOrder, error: errorOrder, orders } = ordersListMy;\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    } else {\n      if (!user.name) {\n        dispatch(getUserDetails(\"profile\"));\n        dispatch(listMyOrders());\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [dispatch, user, history, userInfo]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setMessage(\"Passwords do not match\");\n    } else {\n      // dispatch UpdateProfile\n      dispatch(updateUserProfile({ id: user._id, name, email, password }));\n    }\n  };\n\n  return (\n    <Row>\n      <Col md={3}>\n        <h2>User Profile</h2>\n        {message && <Message variant=\"danger\">{message}</Message>}\n        {success && <Message variant=\"success\">Profile Updated</Message>}\n        {error && <Message variant=\"danger\">{error}</Message>}\n        {loading && <Loader />}\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId=\"name\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter name\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"email\">\n            <Form.Label>Email Address</Form.Label>\n            <Form.Control\n              type=\"email\"\n              placeholder=\"Enter email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"password\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Enter password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"confirmPassword\">\n            <Form.Label>Confirm Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Confirm password\"\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Button type=\"submit\" variant=\"primary\">\n            Update\n          </Button>\n        </Form>\n      </Col>\n      <Col md={9}>\n        <h2>My Orders</h2>\n        {loadingOrder ? (\n          <Loader />\n        ) : errorOrder ? (\n          <Message variant=\"danger\">{errorOrder}</Message>\n        ) : (\n          <Table striped bordered hover responsive className=\"table-sm\">\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>DATE</th>\n                <th>TOTAL</th>\n                <th>PAID</th>\n                <th>DELIVERED</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {orders.map((order) => (\n                <tr key={order._id}>\n                  <td>{order._id}</td>\n                  <td>{order.createdAt.substring(0, 10)}</td>\n                  <td>{order.totalPrice}</td>\n                  <td>\n                    {order.isPaid ? (\n                      order.paidAt.substring(0, 10)\n                    ) : (\n                      <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\n                    )}\n                  </td>\n                  <td>\n                    {order.isDelivered ? (\n                      order.deliveredAt.substring(0, 10)\n                    ) : (\n                      <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\n                    )}\n                  </td>\n                  <td>\n                    <LinkContainer to={`/order/${order._id}`}>\n                      <Button className=\"btn-sm\" variant=\"light\">\n                        Details\n                      </Button>\n                    </LinkContainer>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        )}\n      </Col>\n    </Row>\n  );\n};\n\nexport default ProfileScreen;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport FormContainer from \"../components/FormContainer\";\nimport { register } from \"../actions/userActions\";\n\nconst RegisterScreen = ({ location, history }) => {\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const userRegister = useSelector((state) => state.userRegister);\n  const { loading, error, userInfo } = userRegister;\n\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [history, userInfo, redirect]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setMessage(\"Passwords do not match\");\n    } else if (password.length < 8) {\n      setMessage(\"Passwords must be at least 8 characters\");\n    } else {\n      dispatch(register(name, email, password));\n    }\n  };\n\n  return (\n    <FormContainer>\n      <h1>Sign Up</h1>\n      {message && <Message variant=\"danger\">{message}</Message>}\n      {error && <Message variant=\"danger\">{error}</Message>}\n      {loading && <Loader />}\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId=\"name\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter name\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"email\">\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Enter email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Enter password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"confirmPassword\">\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Confirm password\"\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type=\"submit\" variant=\"primary\">\n          Register\n        </Button>\n      </Form>\n\n      <Row className=\"py-3\">\n        <Col>\n          Have an account?{\" \"}\n          <Link to={redirect ? `/login?redirect=${redirect}` : \"/login\"}>\n            Login\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  );\n};\n\nexport default RegisterScreen;\n","import React, { useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FormContainer from \"../components/FormContainer\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\nimport { saveShippingAddress } from \"../actions/cartActions\";\n\nconst ShippingScreen = ({ history }) => {\n  const cart = useSelector((state) => state.cart);\n  const { shippingAddress } = cart;\n\n  const [address, setAddress] = useState(shippingAddress.address);\n  const [city, setCity] = useState(shippingAddress.city);\n  const [postalcode, setPostalcode] = useState(shippingAddress.postalcode);\n  const [country, setCountry] = useState(shippingAddress.country);\n\n  const dispatch = useDispatch();\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(saveShippingAddress({ address, city, postalcode, country }));\n    history.push(\"/payment\");\n  };\n\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 />\n      <h1>Shipping</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId=\"address\">\n          <Form.Label>Address</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter address\"\n            value={address}\n            required\n            onChange={(e) => setAddress(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"city\">\n          <Form.Label>City</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter city\"\n            value={city}\n            required\n            onChange={(e) => setCity(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"postalcode\">\n          <Form.Label>Postal Code</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter postal code\"\n            value={postalcode}\n            required\n            onChange={(e) => setPostalcode(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"country\">\n          <Form.Label>Country</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter country\"\n            value={country}\n            required\n            onChange={(e) => setCountry(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type=\"submit\" variant=\"primary\">\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  );\n};\n\nexport default ShippingScreen;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport FormContainer from \"../components/FormContainer\";\nimport { getUserDetails, updateUsers } from \"../actions/userActions\";\nimport { USER_UPDATE_RESET } from \"../constants/userConstants\";\n\nconst UserEditScreen = ({ match, history }) => {\n  const userId = match.params.id;\n\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [isAdmin, setIsAdmin] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const userDetails = useSelector((state) => state.userDetails);\n  const { loading, error, user } = userDetails;\n\n  const userUpdate = useSelector((state) => state.userUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = userUpdate;\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: USER_UPDATE_RESET });\n      history.push(\"/admin/userlist\");\n    }\n\n    if (!user.name || user._id !== userId) {\n      dispatch(getUserDetails(userId));\n    } else {\n      setName(user.name);\n      setEmail(user.email);\n      setIsAdmin(user.isAdmin);\n    }\n  }, [dispatch, user, userId, successUpdate, history]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(updateUsers({ _id: userId, name, email, isAdmin }));\n  };\n\n  return (\n    <>\n      <Link to=\"/admin/userlist\" className=\"btn btn-light my-3\">\n        Go Back\n      </Link>\n      <FormContainer>\n        <h1>Sign Up</h1>\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant=\"danger\">{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId=\"name\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"email\">\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"Enter email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"isAdmin\">\n              <Form.Check\n                type=\"checkbox\"\n                label=\"Is Admin\"\n                value={isAdmin}\n                checked={isAdmin}\n                onChange={(e) => setIsAdmin(e.target.checked)}\n              ></Form.Check>\n            </Form.Group>\n            <Button type=\"submit\" variant=\"primary\">\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  );\n};\n\nexport default UserEditScreen;\n","import React, { useEffect } from \"react\";\nimport { Table, Button } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteUsers, listUsers } from \"../actions/userActions\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\n\nconst UserListScreen = ({ history }) => {\n  const dispatch = useDispatch();\n\n  const userList = useSelector((state) => state.userList);\n  const { loading, error, users } = userList;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userDelete = useSelector((state) => state.userDelete);\n  const { success: successDelete } = userDelete;\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listUsers());\n    } else {\n      history.push(\"/login\");\n    }\n  }, [dispatch, history, userInfo, successDelete]);\n  const deleteHandler = (id) => {\n    if (window.confirm(\"Are you sure?\")) {\n      dispatch(deleteUsers(id));\n    }\n  };\n  return (\n    <>\n      <h1>Users</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <Table striped bordered hover responsive className=\"table-sm\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>NAME</th>\n              <th>EMAIL</th>\n              <th>ADMIN</th>\n              <th></th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {users.map((user) => (\n              <tr key={user._id}>\n                <td>{user._id}</td>\n                <td>{user.name}</td>\n                <td>\n                  <a href={`mailto:${user.email}`}>{user.email}</a>\n                </td>\n                <td>\n                  {user.isAdmin ? (\n                    <i className=\"fas fa-check\" style={{ color: \"green\" }}></i>\n                  ) : (\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\n                  )}\n                </td>\n                <td>\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                    <Button variant=\"light\" className=\"btn-sm\">\n                      <i className=\"fas fa-edit\"></i>\n                    </Button>\n                  </LinkContainer>\n                  <Button\n                    variant=\"light\"\n                    className=\"btn-sm\"\n                    onClick={() => deleteHandler(user._id)}\n                  >\n                    <i className=\"fas fa-trash\" style={{ color: \"red\" }}></i>\n                  </Button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </>\n  );\n};\n\nexport default UserListScreen;\n","import React from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Footer from \"./components/Footer\";\nimport Header from \"./components/Header\";\nimport CartScreen from \"./Screens/CartScreen\";\nimport HomeScreen from \"./Screens/HomeScreen\";\nimport LoginScreen from \"./Screens/LoginScreen\";\nimport OrderListScreen from \"./Screens/OrderListScreen\";\nimport OrderScreen from \"./Screens/OrderScreen\";\nimport PaymentScreen from \"./Screens/PaymentScreen\";\nimport PlaceOrderScreen from \"./Screens/PlaceOrderScreen\";\nimport ProductEditScreen from \"./Screens/ProductEditScreen\";\nimport ProductListScreen from \"./Screens/ProductListScreen\";\nimport ProductScreen from \"./Screens/ProductScreen\";\nimport ProfileScreen from \"./Screens/ProfileScreen\";\nimport RegisterScreen from \"./Screens/RegisterScreen\";\nimport ShippingScreen from \"./Screens/ShippingScreen\";\nimport UserEditScreen from \"./Screens/UserEditScreen\";\nimport UserListScreen from \"./Screens/UserListScreen\";\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <main className=\"py-3\">\n        <Container>\n          <Route path=\"/login\" component={LoginScreen} />\n          <Route path=\"/profile\" component={ProfileScreen} />\n          <Route path=\"/register\" component={RegisterScreen} />\n          <Route path=\"/shipping\" component={ShippingScreen} />\n          <Route path=\"/payment\" component={PaymentScreen} />\n          <Route path=\"/placeorder\" component={PlaceOrderScreen} />\n          <Route path=\"/orders/:id\" component={OrderScreen} />\n          <Route path=\"/product/:id\" component={ProductScreen} />\n          <Route path=\"/cart/:id?\" component={CartScreen} />\n          <Route path=\"/admin/userlist\" component={UserListScreen} />\n          <Route\n            path=\"/admin/productlist\"\n            component={ProductListScreen}\n            exact\n          />\n          <Route\n            path=\"/admin/productlist/:pageNumber\"\n            component={ProductListScreen}\n            exact\n          />\n          <Route path=\"/admin/product/:id/edit\" component={ProductEditScreen} />\n          <Route path=\"/admin/orderlist\" component={OrderListScreen} />\n          <Route path=\"/admin/user/:id/edit\" component={UserEditScreen} />\n          <Route path=\"/search/:keyword\" component={HomeScreen} exact />\n          <Route path=\"/page/:pageNumber\" component={HomeScreen} />\n          <Route\n            path=\"/search/:keyword/page/:pageNumber\"\n            component={HomeScreen}\n          />\n          <Route path=\"/\" component={HomeScreen} exact />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport \"./bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}